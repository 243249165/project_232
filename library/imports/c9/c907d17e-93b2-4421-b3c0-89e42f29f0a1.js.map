{"version":3,"sources":["assets/script/model/public/ResManger.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,0DAAqD;AAG/C,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IADA;QAIY,gBAAW,GAAyB,IAAI,GAAG,EAAmB,CAAC;QAC/D,oBAAe,GAAyB,IAAI,GAAG,EAAmB,CAAC;IA2D/E,CAAC;kBA/DoB,SAAS;IAc1B,sBAAkB,qBAAQ;QAT1B,8BAA8B;QAC9B;;;;;;;WAOG;aACH;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,WAAS,EAAE,CAAC;QAC9E,CAAC;;;OAAA;IAED;;;;;;;;;;;OAWG;IACK,4BAAQ,GAAhB,UAAiB,GAAW,EAAE,IAAsB,EAAE,iBAAuD,EAAE,WAAqB;QAApI,iBAgCC;QA/BG,IAAI,CAAC,GAAG,EAAE;YACN,EAAE,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;SAC9C;QACD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,UAAC,GAAU,EAAE,QAAa;YACnD,IAAI,GAAG,EAAE;gBACL,EAAE,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;gBACzC,OAAO;aACV;YACD,IAAI,IAAa,CAAA;YACjB,IAAI,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;gBACvB,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aAChC;iBAAM;gBACH,IAAI,GAAG,IAAI,iBAAO,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;aAElB;YAED,IAAI,WAAW,EAAE;gBACb,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACvC;YAED,IAAI,iBAAiB,EAAE;gBACnB,iBAAiB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;aACnC;QAKL,CAAC,CAAC,CAAA;IACN,CAAC;;IA9DgB,SAAS;QAD7B,OAAO;OACa,SAAS,CA+D7B;IAAD,gBAAC;CA/DD,AA+DC,IAAA;kBA/DoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import ResInfo from \"../../structure/public/ResInfo\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ResManger {\n\n    private static _instance: ResManger;\n    private _resInfoMap: Map<string, ResInfo> = new Map<string, ResInfo>();\n    private _persistenceMap: Map<string, ResInfo> = new Map<string, ResInfo>();\n    // private _persistenceMap:Map\n    /**\n     * 单例\n     *\n     * @readonly\n     * @static\n     * @type {ResManger}\n     * @memberof ResManger\n     */\n    public static get Instance(): ResManger {\n        return this._instance ? this._instance : this._instance = new ResManger();\n    }\n\n    /**\n     * 加载资源\n     *\n     * @author allen\n     * @date 2020-06-08\n     * @private\n     * @param {string} url 资源路径\n     * @param {typeof cc.Asset} [type] 资源类型\n     * @param {(err: Error, resource: any) => void} [completeCanllback] 加载回调\n     * @param {boolean} [persistence] 是否标记为不释放资源\n     * @memberof ResManger\n     */\n    private _loadRes(url: string, type?: typeof cc.Asset, completeCanllback?: (err: Error, resource: any) => void, persistence?: boolean): void {\n        if (!url) {\n            cc.error('------------------------加载路径为空');\n        }\n        cc.loader.loadRes(url, type, (err: Error, resource: any) => {\n            if (err) {\n                cc.error('------------------加载异常：', err);\n                return;\n            }\n            let info: ResInfo\n            if (this._resInfoMap[url]) {\n                info = this._resInfoMap[url];\n            } else {\n                info = new ResInfo();\n                info.resource = resource;\n                info.type = type;\n                info.url = url;\n\n            }\n\n            if (persistence) {\n                this._persistenceMap.set(url, info);\n            }\n\n            if (completeCanllback) {\n                completeCanllback(err, resource)\n            }\n\n\n\n\n        })\n    }\n}\n"]}